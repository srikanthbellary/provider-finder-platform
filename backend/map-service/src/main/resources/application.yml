server:
  port: 8090
  servlet:
    context-path: /api/map

spring:
  application:
    name: map-service
  datasource:
    url: jdbc:postgresql://localhost:5432/providerdb
    username: appuser
    password: apppassword
    driver-class-name: org.postgresql.Driver
  jpa:
    hibernate:
      ddl-auto: none
    properties:
      hibernate:
        dialect: org.hibernate.spatial.dialect.postgis.PostgisDialect
    show-sql: true
  cache:
    type: none
  redis:
    host: localhost
    port: 6379
    timeout: 2000

eureka:
  client:
    enabled: false
    fetch-registry: false
    register-with-eureka: false
  instance:
    prefer-ip-address: true

springdoc:
  api-docs:
    path: /api-docs
  swagger-ui:
    path: /swagger-ui.html
    operationsSorter: method

management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
  endpoint:
    health:
      show-details: always

# Custom application properties
app:
  map:
    default-search-radius-km: 5
    max-search-radius-km: 50
    max-results: 100
    cache:
      provider-ttl-seconds: 300
      viewport-ttl-seconds: 120

# Logging configuration
logging:
  level:
    root: INFO
    com.healthapp.mapservice: DEBUG
    org.hibernate.SQL: DEBUG
    org.hibernate.type.descriptor.sql: TRACE
    org.springframework.jdbc.core.JdbcTemplate: DEBUG
    org.springframework.jdbc.core.StatementCreatorUtils: TRACE

---
# Docker profile
spring:
  config:
    activate:
      on-profile: docker
  datasource:
    url: jdbc:postgresql://postgres:5432/providerdb
  redis:
    host: redis
    port: 6379
    password:

eureka:
  client:
    service-url:
      defaultZone: http://discovery-server:8761/eureka/